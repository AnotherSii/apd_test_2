import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, g as goto, a as space, e as element, t as text, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, h as children, j as claim_text, k as attr_dev, l as add_location, m as insert_dev, n as append_dev, o as set_input_value, p as listen_dev, r as prevent_default, u as noop, w as run_all } from './client.21b56940.js';

/* src/routes/index.svelte generated by Svelte v3.31.0 */
const file = "src/routes/index.svelte";

function create_fragment(ctx) {
	let t0;
	let h1;
	let t1;
	let t2;
	let form;
	let p;
	let t3;
	let t4;
	let input0;
	let t5;
	let input1;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			t1 = text("Lamden Tutorial");
			t2 = space();
			form = element("form");
			p = element("p");
			t3 = text("Check your token balance");
			t4 = space();
			input0 = element("input");
			t5 = space();
			input1 = element("input");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1n2jydq\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			h1 = claim_element(nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "Lamden Tutorial");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			form = claim_element(nodes, "FORM", { class: true });
			var form_nodes = children(form);
			p = claim_element(form_nodes, "P", { class: true });
			var p_nodes = children(p);
			t3 = claim_text(p_nodes, "Check your token balance");
			p_nodes.forEach(detach_dev);
			t4 = claim_space(form_nodes);
			input0 = claim_element(form_nodes, "INPUT", { type: true, required: true, class: true });
			t5 = claim_space(form_nodes);
			input1 = claim_element(form_nodes, "INPUT", { class: true, type: true, value: true });
			form_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Lamden Tutorial";
			attr_dev(h1, "class", "svelte-1uqpxk2");
			add_location(h1, file, 17, 0, 292);
			attr_dev(p, "class", "svelte-1uqpxk2");
			add_location(p, file, 21, 3, 362);
			attr_dev(input0, "type", "text");
			input0.required = "true";
			attr_dev(input0, "class", "svelte-1uqpxk2");
			add_location(input0, file, 22, 3, 397);
			attr_dev(input1, "class", "button svelte-1uqpxk2");
			attr_dev(input1, "type", "submit");
			input1.value = "sign in";
			add_location(input1, file, 23, 3, 455);
			attr_dev(form, "class", "svelte-1uqpxk2");
			add_location(form, file, 20, 0, 319);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, h1, anchor);
			append_dev(h1, t1);
			insert_dev(target, t2, anchor);
			insert_dev(target, form, anchor);
			append_dev(form, p);
			append_dev(p, t3);
			append_dev(form, t4);
			append_dev(form, input0);
			set_input_value(input0, /*user*/ ctx[0]);
			append_dev(form, t5);
			append_dev(form, input1);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[2]),
					listen_dev(form, "submit", prevent_default(/*login*/ ctx[1]), false, true, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*user*/ 1 && input0.value !== /*user*/ ctx[0]) {
				set_input_value(input0, /*user*/ ctx[0]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(form);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	let user = "";

	const login = () => {
		goto("/users/" + user);
	};

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		user = this.value;
		$$invalidate(0, user);
	}

	$$self.$capture_state = () => ({ goto, user, login });

	$$self.$inject_state = $$props => {
		if ("user" in $$props) $$invalidate(0, user = $$props.user);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [user, login, input0_input_handler];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguZDZjMDkyMTYuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjwhLS0gZnJvbnRlbmQvc3JjL3JvdXRlcy9pbmRleC5zdmVsdGUgLS0+XG48c2NyaXB0PlxuICAgIGltcG9ydCB7IGdvdG8gfSBmcm9tICdAc2FwcGVyL2FwcCc7XG4gICAgbGV0IHVzZXIgPSBcIlwiO1xuICAgIGNvbnN0IGxvZ2luID0gKCkgPT4geyBnb3RvKCcvdXNlcnMvJyArIHVzZXIpOyB9XG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAgKntcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgIH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgIDx0aXRsZT5MYW1kZW4gVHV0b3JpYWw8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPGgxPkxhbWRlbiBUdXRvcmlhbDwvaDE+XG5cblxuPGZvcm0gb246c3VibWl0fHByZXZlbnREZWZhdWx0PXtsb2dpbn0+XG4gICA8cD5DaGVjayB5b3VyIHRva2VuIGJhbGFuY2U8L3A+XG4gICA8aW5wdXQgdHlwZT1cInRleHRcIiBiaW5kOnZhbHVlPXt1c2VyfSByZXF1aXJlZD1cInRydWVcIi8+XG4gICA8aW5wdXQgY2xhc3M9XCJidXR0b25cIiB0eXBlPVwic3VibWl0XCIgdmFsdWU9XCJzaWduIGluXCIgLz5cbjwvZm9ybT5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0NBc0JrQyxHQUFJOzs7Ozs7OzBEQUZOLEdBQUs7Ozs7Ozs7dURBRUgsR0FBSTtxQ0FBSixHQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQW5COUIsSUFBSSxHQUFHLEVBQUU7O09BQ1AsS0FBSztFQUFXLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSTs7Ozs7Ozs7OztFQWtCYixJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
